from itertools import combinations
from numpy import average
from project.config import WORLD_TRADE_FLOW_DATA_FILE_ORIGINAL
from project.export_data.exportdata import ExportData
from project.signed_networks.definitions import definition_C3, args_for_definition_C
from project.signed_networks.structural_balance.metrics.triad import triad_type, get_traids, is_traid
from project.signed_networks.structural_balance.metrics.config import OUT_DIR
from project.signed_networks.structural_balance.metrics.util import count_edge_types, RandomNetwork
from project.util import file_safe, std_dev


def traid_plot_value(traid_type):
    if traid_type == 'T003':
        return 0
    elif traid_type == 'T012':
        return 1
    elif traid_type == 'T102':
        return 2
    elif traid_type == 'T021':
        return 3
    elif traid_type == 'T111':
        return 4
    elif traid_type == 'T201':
        return 5
    elif traid_type == 'T030':
        return 6
    elif traid_type == 'T120':
        return 7
    elif traid_type == 'T210':
        return 8
    elif traid_type == 'T300':
        return 9
    print "traid_type=%s" % traid_type


def generate_triad_type_transition_matlab_code(data, definition, def_args):
    f = open(OUT_DIR.DIR + 'triad-matlab-code.txt', 'w')

    for (A, B, C) in combinations(data.countries(), 3):
        f.write("%s-%s-%s:y=%s\n" % (file_safe(A), file_safe(B), file_safe(C),
                                     str([traid_plot_value(
                                         triad_type(data, year, A, B, C, definition, def_args))
                                          for year in data.all_years]).replace(",", " ")))
    f.write("x=%s;\n" % str([year for year in data.all_years]).replace(",", " "))
    f.write("plot(x,y,'b-o',[2000 2000],[0 8],'b.');\n")
    f.write("set(gca,'YTick',[0 1 2 3 4 5 6 7 8 9]);\n")
    f.write("set(gca,'YTickLabel',{'T003','T012','T102','T021','T111','T201','T030','T120','T210','T300'});\n")

    f.close()


def print_traid_transitions(data, definition, def_args, years_range):
    for year in years_range:
        for traid in ['T0', 'T1', 'T2', 'T3']:
            this_year_count = 0
            next_year_counts = {'T0': 0, 'T1': 0, 'T2': 0, 'T3': 0}
            for (A, B, C) in get_traids(data, year, definition, def_args, traid):
                this_year_count += 1
                if is_traid(data, year, A, B, C, definition, def_args):
                    t_type = triad_type(data, year + 1, A, B, C, definition, def_args)[:2]
                    if t_type == 'T0': next_year_counts['T0'] += 1
                    if t_type == 'T1': next_year_counts['T1'] += 1
                    if t_type == 'T2': next_year_counts['T2'] += 1
                    if t_type == 'T3': next_year_counts['T3'] += 1
            for next_traid in ['T0', 'T1', 'T2', 'T3']:
                print "%d:%s->%s=%.2f" % (year, traid, next_traid, next_year_counts[next_traid] * 1.0 / this_year_count)


class RunLength:
    def __init__(self):
        self.run_lengths = {}

    def record(self, traid_type, length, count=1):
        if traid_type not in self.run_lengths: self.run_lengths[traid_type] = {}
        if length not in self.run_lengths[traid_type]: self.run_lengths[traid_type][length] = 0
        self.run_lengths[traid_type][length] += count

    def print_averages(self):
        for traid_type in self.run_lengths:
            values=[]
            for count in self.run_lengths[traid_type]:
                for i in range(0,self.run_lengths[traid_type][count]): values.append(count)
            print "%s=%.2f,%.2f" % (traid_type, average(values),std_dev(values))


def get_run_lengths(data, definition, def_args, randomize=False):
    runLengths = RunLength()
    # 1373701
    count = 0
    start = 9
    end = 10
    total = 203 * 202 * 201 / 6 / 10

    for (A, B, C) in combinations(data.countries(), 3):
        if total * start < count < total * end:
            running_traid = triad_type(data, 1963, A, B, C, definition, def_args)
            running_count = 1
            for year in range(1964, 2001):
                current_traid = triad_type(data, year, A, B, C, definition, def_args)
                if current_traid != running_traid:
                    runLengths.record(running_traid, running_count)
                    running_traid = current_traid
                    running_count = 1
                else:
                    running_count += 1
            if running_count == 38 and running_traid == 'T300': print "(%s,%s,%s)" % (A, B, C)
            runLengths.record(running_traid, running_count)
        count += 1
    return runLengths

# data = ExportData()
# data.load_file('../../' + WORLD_TRADE_FLOW_DATA_FILE_ORIGINAL, should_read_world_datapoints=True)

# definition = definition_C3
# def_args = args_for_definition_C(10, 5000)

# generate_triad_type_transition_matlab_code(data,definition, def_args)

# print_traid_transitions(data, definition, def_args, range(1995, 2001))

# print get_run_lengths(data, definition, def_args).run_lengths


def triad_runlengths():
    import ast

    arr = []

    arr.append(ast.literal_eval("{'T120': {1: 8758, 2: 4103, 3: 1854, 4: 1236, 5: 876, 6: 610, 7: 550, 8: 422, 9: 535, 10: 391, 11: 301, 12: 160, 13: 244, 14: 239, 15: 129, 16: 118, 17: 123, 18: 99, 19: 71, 20: 87, 21: 54, 22: 62, 23: 71, 24: 48, 25: 29, 26: 48, 27: 47, 28: 69, 29: 43, 30: 18, 31: 47, 32: 46, 33: 28, 34: 27, 35: 31, 36: 16, 37: 67, 38: 81}, 'T210': {1: 8706, 2: 3638, 3: 1773, 4: 1284, 5: 967, 6: 603, 7: 573, 8: 495, 9: 692, 10: 526, 11: 352, 12: 223, 13: 224, 14: 188, 15: 179, 16: 225, 17: 191, 18: 122, 19: 88, 20: 88, 21: 127, 22: 87, 23: 102, 24: 130, 25: 124, 26: 390, 27: 117, 28: 85, 29: 46, 30: 55, 31: 52, 32: 49, 33: 54, 34: 57, 35: 68, 36: 92, 37: 172, 38: 34}, 'T012': {1: 18437, 2: 7810, 3: 4922, 4: 3703, 5: 2784, 6: 1990, 7: 2058, 8: 1421, 9: 2463, 10: 1870, 11: 1828, 12: 1228, 13: 1397, 14: 1264, 15: 689, 16: 714, 17: 959, 18: 544, 19: 526, 20: 654, 21: 694, 22: 434, 23: 382, 24: 641, 25: 626, 26: 1042, 27: 535, 28: 557, 29: 467, 30: 424, 31: 1312, 32: 702, 33: 747, 34: 685, 35: 1118, 36: 828, 37: 1709, 38: 6985}, 'T111': {1: 19194, 2: 9246, 3: 4672, 4: 3291, 5: 2381, 6: 1737, 7: 1523, 8: 1096, 9: 1246, 10: 965, 11: 696, 12: 453, 13: 492, 14: 574, 15: 380, 16: 338, 17: 323, 18: 337, 19: 248, 20: 229, 21: 158, 22: 213, 23: 206, 24: 214, 25: 82, 26: 359, 27: 211, 28: 170, 29: 134, 30: 121, 31: 158, 32: 96, 33: 77, 34: 72, 35: 95, 36: 71, 37: 222, 38: 305}, 'T003': {1: 3927, 2: 1465, 3: 3614, 4: 1190, 5: 1068, 6: 593, 7: 1903, 8: 441, 9: 605, 10: 446, 11: 606, 12: 766, 13: 148, 14: 199, 15: 68, 16: 148, 17: 184, 18: 21, 19: 41, 20: 9, 21: 229, 22: 3, 23: 6, 24: 69, 25: 6, 26: 132, 27: 13, 28: 975, 38: 69880}, 'T030': {1: 3494, 2: 1170, 3: 730, 4: 480, 5: 437, 6: 359, 7: 246, 8: 238, 9: 361, 10: 301, 11: 157, 12: 109, 13: 123, 14: 107, 15: 55, 16: 41, 17: 89, 18: 44, 19: 29, 20: 45, 21: 29, 22: 24, 23: 18, 24: 23, 25: 28, 26: 54, 27: 16, 28: 9, 29: 12, 30: 7, 31: 21, 32: 18, 33: 21, 34: 24, 35: 15, 36: 8, 37: 15, 38: 72}, 'T102': {1: 18013, 2: 6964, 3: 4187, 4: 2325, 5: 1719, 6: 1434, 7: 1852, 8: 845, 9: 1861, 10: 1274, 11: 826, 12: 468, 13: 513, 14: 282, 15: 348, 16: 378, 17: 666, 18: 348, 19: 159, 20: 222, 21: 208, 22: 233, 23: 295, 24: 196, 25: 188, 26: 818, 27: 634, 28: 572, 29: 248, 30: 184, 31: 123, 32: 158, 33: 89, 34: 119, 35: 77, 36: 132, 37: 919, 38: 2491}, 'T300': {1: 3876, 2: 1438, 3: 761, 4: 425, 5: 338, 6: 288, 7: 262, 8: 194, 9: 321, 10: 214, 11: 141, 12: 94, 13: 65, 14: 75, 15: 59, 16: 76, 17: 141, 18: 54, 19: 43, 20: 41, 21: 38, 22: 60, 23: 48, 24: 31, 25: 39, 26: 78, 27: 150, 28: 102, 29: 40, 30: 19, 31: 13, 32: 24, 33: 13, 34: 19, 35: 8, 36: 12, 37: 41, 38: 247}, 'T021': {1: 13830, 2: 5787, 3: 2855, 4: 2053, 5: 1505, 6: 1255, 7: 1050, 8: 858, 9: 1142, 10: 1186, 11: 761, 12: 594, 13: 742, 14: 582, 15: 318, 16: 330, 17: 377, 18: 212, 19: 204, 20: 227, 21: 205, 22: 179, 23: 172, 24: 231, 25: 173, 26: 334, 27: 205, 28: 180, 29: 160, 30: 125, 31: 322, 32: 198, 33: 181, 34: 158, 35: 241, 36: 198, 37: 468, 38: 800}, 'T201': {1: 9797, 2: 3655, 3: 1927, 4: 1416, 5: 911, 6: 633, 7: 663, 8: 446, 9: 977, 10: 696, 11: 415, 12: 185, 13: 334, 14: 117, 15: 112, 16: 248, 17: 191, 18: 187, 19: 77, 20: 85, 21: 71, 22: 67, 23: 132, 24: 144, 25: 75, 26: 864, 27: 142, 28: 116, 29: 27, 30: 58, 31: 48, 32: 29, 33: 39, 34: 25, 35: 34, 36: 39, 37: 175, 38: 31}}"))
    arr.append(ast.literal_eval("{'T120': {1: 12399, 2: 5626, 3: 2846, 4: 2464, 5: 1782, 6: 1006, 7: 893, 8: 859, 9: 923, 10: 1056, 11: 815, 12: 530, 13: 361, 14: 390, 15: 472, 16: 293, 17: 726, 18: 239, 19: 151, 20: 189, 21: 112, 22: 136, 23: 192, 24: 146, 25: 119, 26: 179, 27: 134, 28: 175, 29: 80, 30: 98, 31: 82, 32: 86, 33: 66, 34: 69, 35: 78, 36: 73, 37: 130, 38: 252}, 'T210': {1: 13010, 2: 5479, 3: 2679, 4: 1865, 5: 1240, 6: 828, 7: 703, 8: 533, 9: 442, 10: 524, 11: 440, 12: 214, 13: 161, 14: 224, 15: 199, 16: 168, 17: 183, 18: 75, 19: 79, 20: 89, 21: 97, 22: 46, 23: 57, 24: 60, 25: 56, 26: 46, 27: 43, 28: 99, 29: 28, 30: 28, 31: 16, 32: 29, 33: 23, 34: 6, 35: 9, 36: 9, 37: 13, 38: 60}, 'T012': {1: 21975, 2: 8714, 3: 4740, 4: 4057, 5: 2822, 6: 2047, 7: 2742, 8: 1792, 9: 2363, 10: 2815, 11: 2844, 12: 1740, 13: 1197, 14: 1512, 15: 1008, 16: 1508, 17: 1744, 18: 900, 19: 1001, 20: 903, 21: 1035, 22: 354, 23: 515, 24: 610, 25: 748, 26: 725, 27: 730, 28: 976, 29: 431, 30: 411, 31: 1466, 32: 744, 33: 736, 34: 972, 35: 956, 36: 1096, 37: 2145, 38: 8873}, 'T003': {1: 4086, 2: 2637, 3: 1725, 4: 1725, 5: 829, 6: 506, 7: 2293, 8: 260, 9: 607, 10: 1043, 11: 551, 12: 286, 13: 141, 14: 266, 15: 71, 16: 127, 17: 94, 18: 21, 19: 49, 20: 11, 21: 269, 22: 2, 23: 9, 24: 191, 25: 7, 26: 140, 27: 13, 28: 733, 38: 59277}, 'T030': {1: 6956, 2: 2124, 3: 1265, 4: 1117, 5: 826, 6: 580, 7: 559, 8: 487, 9: 630, 10: 716, 11: 502, 12: 297, 13: 240, 14: 190, 15: 178, 16: 161, 17: 177, 18: 92, 19: 69, 20: 63, 21: 87, 22: 26, 23: 50, 24: 70, 25: 41, 26: 54, 27: 36, 28: 34, 29: 26, 30: 26, 31: 51, 32: 45, 33: 41, 34: 59, 35: 45, 36: 28, 37: 51, 38: 93}, 'T111': {1: 15763, 2: 7521, 3: 3467, 4: 2843, 5: 1822, 6: 1247, 7: 1373, 8: 1087, 9: 669, 10: 949, 11: 678, 12: 462, 13: 451, 14: 391, 15: 560, 16: 308, 17: 1157, 18: 322, 19: 155, 20: 225, 21: 147, 22: 124, 23: 284, 24: 176, 25: 124, 26: 130, 27: 221, 28: 270, 29: 262, 30: 150, 31: 151, 32: 97, 33: 39, 34: 67, 35: 94, 36: 83, 37: 132, 38: 349}, 'T102': {1: 20771, 2: 9111, 3: 4077, 4: 3926, 5: 2391, 6: 1572, 7: 1817, 8: 1402, 9: 858, 10: 1583, 11: 906, 12: 544, 13: 508, 14: 626, 15: 1254, 16: 452, 17: 2183, 18: 386, 19: 77, 20: 556, 21: 303, 22: 292, 23: 367, 24: 216, 25: 240, 26: 294, 27: 342, 28: 802, 29: 387, 30: 347, 31: 184, 32: 299, 33: 99, 34: 92, 35: 89, 36: 136, 37: 172, 38: 2599}, 'T300': {1: 4632, 2: 1941, 3: 828, 4: 894, 5: 621, 6: 367, 7: 341, 8: 285, 9: 177, 10: 373, 11: 209, 12: 117, 13: 97, 14: 146, 15: 197, 16: 111, 17: 438, 18: 49, 19: 13, 20: 70, 21: 32, 22: 63, 23: 83, 24: 47, 25: 41, 26: 71, 27: 66, 28: 112, 29: 51, 30: 42, 31: 19, 32: 45, 33: 17, 34: 10, 35: 18, 36: 11, 37: 28, 38: 201}, 'T021': {1: 13323, 2: 5124, 3: 2576, 4: 2367, 5: 1865, 6: 1219, 7: 1405, 8: 1072, 9: 1497, 10: 1586, 11: 1396, 12: 764, 13: 574, 14: 734, 15: 381, 16: 559, 17: 769, 18: 441, 19: 446, 20: 514, 21: 311, 22: 116, 23: 232, 24: 361, 25: 194, 26: 260, 27: 288, 28: 186, 29: 129, 30: 70, 31: 578, 32: 168, 33: 190, 34: 286, 35: 239, 36: 304, 37: 668, 38: 1399}, 'T201': {1: 4454, 2: 1782, 3: 686, 4: 501, 5: 371, 6: 288, 7: 267, 8: 186, 9: 109, 10: 184, 11: 123, 12: 81, 13: 59, 14: 49, 15: 69, 16: 74, 17: 70, 18: 100, 19: 13, 20: 41, 21: 66, 22: 17, 23: 21, 24: 15, 25: 24, 26: 9, 27: 21, 28: 18, 29: 19, 30: 45, 31: 1, 33: 4, 35: 3, 38: 19}}"))
    arr.append(ast.literal_eval("{'T120': {1: 7919, 2: 3174, 3: 2069, 4: 1022, 5: 798, 6: 690, 7: 590, 8: 465, 9: 478, 10: 538, 11: 364, 12: 230, 13: 197, 14: 182, 15: 162, 16: 164, 17: 82, 18: 126, 19: 79, 20: 64, 21: 52, 22: 82, 23: 75, 24: 61, 25: 50, 26: 45, 27: 55, 28: 118, 29: 75, 30: 30, 31: 63, 32: 48, 33: 28, 34: 33, 35: 64, 36: 44, 37: 48, 38: 68}, 'T210': {1: 8430, 2: 3496, 3: 1937, 4: 1265, 5: 852, 6: 772, 7: 596, 8: 459, 9: 422, 10: 302, 11: 192, 12: 226, 13: 132, 14: 157, 15: 224, 16: 134, 17: 135, 18: 108, 19: 102, 20: 65, 21: 58, 22: 129, 23: 35, 24: 84, 25: 59, 26: 47, 27: 40, 28: 68, 29: 18, 30: 43, 31: 38, 32: 5, 33: 9, 34: 5, 35: 11, 36: 8, 37: 12, 38: 21}, 'T012': {1: 16514, 2: 7546, 3: 5942, 4: 3572, 5: 2541, 6: 2151, 7: 3010, 8: 2272, 9: 2791, 10: 2820, 11: 1758, 12: 1278, 13: 1189, 14: 1136, 15: 1088, 16: 1198, 17: 1094, 18: 823, 19: 1107, 20: 515, 21: 1015, 22: 879, 23: 791, 24: 401, 25: 438, 26: 440, 27: 700, 28: 762, 29: 709, 30: 673, 31: 1453, 32: 741, 33: 1088, 34: 1498, 35: 815, 36: 1079, 37: 1470, 38: 5109}, 'T003': {1: 3509, 2: 2314, 3: 1745, 4: 2283, 5: 1596, 6: 1021, 7: 3452, 8: 726, 9: 1835, 10: 1394, 11: 1070, 12: 268, 13: 344, 14: 386, 15: 938, 16: 467, 17: 237, 18: 149, 19: 56, 20: 11, 21: 70, 22: 5, 23: 76, 24: 68, 25: 7, 26: 90, 27: 20, 28: 1229, 38: 71127}, 'T030': {1: 2558, 2: 1002, 3: 616, 4: 366, 5: 305, 6: 248, 7: 237, 8: 153, 9: 174, 10: 271, 11: 118, 12: 80, 13: 81, 14: 77, 15: 61, 16: 43, 17: 70, 18: 41, 19: 43, 20: 25, 21: 26, 22: 24, 23: 29, 24: 14, 25: 19, 26: 23, 27: 22, 28: 14, 29: 16, 30: 16, 31: 26, 32: 32, 33: 26, 34: 46, 35: 8, 36: 8, 37: 15, 38: 27}, 'T102': {1: 18149, 2: 7392, 3: 3863, 4: 2619, 5: 1677, 6: 1842, 7: 1538, 8: 1163, 9: 1697, 10: 1455, 11: 468, 12: 523, 13: 377, 14: 456, 15: 517, 16: 323, 17: 468, 18: 343, 19: 179, 20: 102, 21: 171, 22: 357, 23: 73, 24: 153, 25: 187, 26: 202, 27: 247, 28: 751, 29: 255, 30: 212, 31: 280, 32: 49, 33: 38, 34: 64, 35: 132, 36: 32, 37: 190, 38: 1676}, 'T300': {1: 3440, 2: 1231, 3: 686, 4: 409, 5: 272, 6: 299, 7: 175, 8: 144, 9: 155, 10: 249, 11: 66, 12: 101, 13: 63, 14: 83, 15: 73, 16: 50, 17: 94, 18: 47, 19: 18, 20: 27, 21: 27, 22: 51, 23: 19, 24: 28, 25: 16, 26: 32, 27: 40, 28: 117, 29: 44, 30: 38, 31: 42, 32: 8, 33: 10, 34: 16, 35: 20, 36: 8, 37: 34, 38: 177}, 'T111': {1: 22292, 2: 9182, 3: 5601, 4: 3244, 5: 2254, 6: 1816, 7: 1638, 8: 1237, 9: 1150, 10: 1007, 11: 602, 12: 658, 13: 458, 14: 439, 15: 524, 16: 320, 17: 317, 18: 330, 19: 342, 20: 183, 21: 156, 22: 339, 23: 160, 24: 163, 25: 104, 26: 231, 27: 167, 28: 370, 29: 294, 30: 93, 31: 186, 32: 80, 33: 23, 34: 37, 35: 138, 36: 102, 37: 87, 38: 214}, 'T201': {1: 9738, 2: 3389, 3: 1922, 4: 1067, 5: 728, 6: 656, 7: 629, 8: 402, 9: 411, 10: 344, 11: 82, 12: 252, 13: 209, 14: 109, 15: 241, 16: 138, 17: 105, 18: 134, 19: 78, 20: 26, 21: 50, 22: 150, 23: 21, 24: 112, 25: 97, 26: 35, 27: 41, 28: 147, 29: 44, 30: 42, 31: 95, 32: 2, 33: 2, 34: 2, 35: 11, 37: 3, 38: 23}, 'T021': {1: 13831, 2: 5598, 3: 4153, 4: 2189, 5: 1750, 6: 1375, 7: 1528, 8: 1335, 9: 985, 10: 1667, 11: 1012, 12: 874, 13: 721, 14: 618, 15: 568, 16: 682, 17: 390, 18: 403, 19: 504, 20: 262, 21: 387, 22: 388, 23: 277, 24: 240, 25: 179, 26: 212, 27: 193, 28: 260, 29: 239, 30: 213, 31: 547, 32: 250, 33: 199, 34: 188, 35: 231, 36: 191, 37: 272, 38: 396}}"))
    arr.append(ast.literal_eval("{'T120': {1: 6780, 2: 3165, 3: 1906, 4: 1293, 5: 892, 6: 640, 7: 499, 8: 532, 9: 488, 10: 576, 11: 293, 12: 258, 13: 159, 14: 212, 15: 156, 16: 80, 17: 185, 18: 79, 19: 95, 20: 64, 21: 66, 22: 102, 23: 63, 24: 39, 25: 25, 26: 38, 27: 40, 28: 75, 29: 26, 30: 28, 31: 12, 32: 35, 33: 16, 34: 18, 35: 4, 36: 16, 37: 26, 38: 56}, 'T210': {1: 6396, 2: 2689, 3: 1500, 4: 1045, 5: 751, 6: 417, 7: 396, 8: 323, 9: 173, 10: 296, 11: 237, 12: 197, 13: 79, 14: 80, 15: 66, 16: 76, 17: 106, 18: 25, 19: 23, 20: 22, 21: 37, 22: 27, 23: 20, 24: 23, 25: 14, 26: 36, 27: 35, 28: 64, 29: 11, 30: 7, 31: 8, 32: 21, 33: 15, 34: 7, 35: 3, 36: 15, 37: 5, 38: 16}, 'T012': {1: 15612, 2: 8508, 3: 4684, 4: 3820, 5: 3007, 6: 2105, 7: 1551, 8: 2190, 9: 1839, 10: 2939, 11: 2059, 12: 1497, 13: 1045, 14: 1111, 15: 841, 16: 960, 17: 1133, 18: 814, 19: 812, 20: 689, 21: 822, 22: 732, 23: 357, 24: 520, 25: 410, 26: 704, 27: 958, 28: 899, 29: 560, 30: 1089, 31: 1021, 32: 1125, 33: 1415, 34: 1039, 35: 904, 36: 1804, 37: 1816, 38: 6818}, 'T003': {1: 4301, 2: 3208, 3: 1936, 4: 1713, 5: 1602, 6: 1568, 7: 1717, 8: 1112, 9: 464, 10: 971, 11: 572, 12: 402, 13: 106, 14: 92, 15: 52, 16: 609, 17: 362, 18: 19, 19: 284, 20: 12, 21: 83, 22: 5, 23: 4, 24: 181, 25: 9, 26: 271, 27: 20, 28: 1140, 38: 74715}, 'T030': {1: 3589, 2: 1483, 3: 822, 4: 715, 5: 497, 6: 345, 7: 277, 8: 395, 9: 292, 10: 467, 11: 217, 12: 113, 13: 124, 14: 128, 15: 68, 16: 71, 17: 82, 18: 47, 19: 48, 20: 41, 21: 50, 22: 38, 23: 26, 24: 24, 25: 21, 26: 26, 27: 53, 28: 19, 29: 19, 30: 30, 31: 21, 32: 33, 33: 37, 34: 31, 35: 25, 36: 31, 37: 30, 38: 41}, 'T102': {1: 17355, 2: 6189, 3: 3984, 4: 2735, 5: 1670, 6: 1598, 7: 1611, 8: 1191, 9: 1037, 10: 1405, 11: 1085, 12: 828, 13: 498, 14: 575, 15: 421, 16: 359, 17: 1421, 18: 388, 19: 83, 20: 293, 21: 141, 22: 176, 23: 100, 24: 73, 25: 146, 26: 122, 27: 193, 28: 763, 29: 236, 30: 117, 31: 29, 32: 116, 33: 62, 34: 81, 35: 35, 36: 123, 37: 156, 38: 1373}, 'T300': {1: 2250, 2: 807, 3: 554, 4: 338, 5: 227, 6: 213, 7: 190, 8: 160, 9: 131, 10: 192, 11: 99, 12: 147, 13: 48, 14: 62, 15: 56, 16: 39, 17: 173, 18: 34, 19: 3, 20: 28, 22: 4, 23: 1, 24: 3, 25: 5, 26: 5, 27: 15, 28: 60, 29: 15, 32: 7, 34: 13, 36: 2, 37: 8, 38: 75}, 'T111': {1: 13413, 2: 6301, 3: 3506, 4: 2421, 5: 1752, 6: 1377, 7: 1087, 8: 931, 9: 731, 10: 963, 11: 641, 12: 506, 13: 368, 14: 520, 15: 302, 16: 227, 17: 524, 18: 167, 19: 184, 20: 156, 21: 148, 22: 133, 23: 102, 24: 97, 25: 102, 26: 89, 27: 141, 28: 276, 29: 121, 30: 62, 31: 49, 32: 80, 33: 30, 34: 44, 35: 34, 36: 51, 37: 99, 38: 326}, 'T201': {1: 5526, 2: 2117, 3: 1100, 4: 765, 5: 529, 6: 340, 7: 395, 8: 260, 9: 106, 10: 255, 11: 165, 12: 197, 13: 92, 14: 81, 15: 33, 16: 94, 17: 48, 18: 23, 19: 29, 20: 20, 21: 68, 22: 19, 23: 16, 24: 21, 25: 16, 26: 54, 27: 26, 28: 111, 29: 20, 30: 4, 31: 4, 32: 9, 33: 8, 34: 2, 35: 3, 36: 4, 37: 14, 38: 38}, 'T021': {1: 8880, 2: 4562, 3: 2686, 4: 2037, 5: 1723, 6: 1088, 7: 920, 8: 1019, 9: 891, 10: 1670, 11: 876, 12: 633, 13: 514, 14: 497, 15: 531, 16: 392, 17: 399, 18: 262, 19: 350, 20: 298, 21: 258, 22: 292, 23: 184, 24: 196, 25: 221, 26: 227, 27: 310, 28: 259, 29: 149, 30: 262, 31: 228, 32: 365, 33: 251, 34: 220, 35: 216, 36: 403, 37: 355, 38: 752}}"))
    arr.append(ast.literal_eval("{'T120': {1: 10996, 2: 5067, 3: 2841, 4: 2042, 5: 1496, 6: 1081, 7: 889, 8: 933, 9: 885, 10: 903, 11: 581, 12: 405, 13: 314, 14: 366, 15: 295, 16: 221, 17: 306, 18: 203, 19: 140, 20: 184, 21: 136, 22: 156, 23: 129, 24: 147, 25: 104, 26: 86, 27: 177, 28: 144, 29: 71, 30: 101, 31: 67, 32: 77, 33: 89, 34: 69, 35: 64, 36: 72, 37: 93, 38: 136}, 'T210': {1: 10443, 2: 4664, 3: 2208, 4: 1657, 5: 1073, 6: 968, 7: 550, 8: 532, 9: 464, 10: 419, 11: 396, 12: 201, 13: 260, 14: 288, 15: 158, 16: 125, 17: 149, 18: 141, 19: 117, 20: 75, 21: 107, 22: 137, 23: 60, 24: 71, 25: 66, 26: 59, 27: 88, 28: 112, 29: 68, 30: 66, 31: 22, 32: 33, 33: 27, 34: 12, 35: 14, 36: 10, 37: 21, 38: 41}, 'T012': {1: 17863, 2: 8703, 3: 4603, 4: 3782, 5: 2814, 6: 2617, 7: 2593, 8: 2485, 9: 1891, 10: 2376, 11: 2314, 12: 1093, 13: 1363, 14: 1108, 15: 894, 16: 1137, 17: 1139, 18: 1058, 19: 624, 20: 914, 21: 1069, 22: 522, 23: 427, 24: 615, 25: 681, 26: 572, 27: 1278, 28: 694, 29: 809, 30: 1040, 31: 1424, 32: 789, 33: 647, 34: 1153, 35: 985, 36: 1384, 37: 2853, 38: 8775}, 'T003': {1: 5963, 2: 2433, 3: 2538, 4: 1536, 5: 877, 6: 1123, 7: 2281, 8: 684, 9: 683, 10: 675, 11: 954, 12: 552, 13: 155, 14: 121, 15: 96, 16: 367, 17: 275, 18: 16, 19: 117, 20: 32, 21: 63, 22: 4, 23: 6, 24: 971, 25: 72, 26: 34, 27: 18, 28: 1112, 38: 58662}, 'T030': {1: 5419, 2: 2250, 3: 1259, 4: 953, 5: 652, 6: 635, 7: 538, 8: 559, 9: 520, 10: 678, 11: 407, 12: 270, 13: 279, 14: 221, 15: 212, 16: 212, 17: 175, 18: 163, 19: 149, 20: 127, 21: 84, 22: 59, 23: 77, 24: 95, 25: 76, 26: 73, 27: 87, 28: 46, 29: 48, 30: 52, 31: 69, 32: 59, 33: 37, 34: 68, 35: 22, 36: 53, 37: 101, 38: 64}, 'T102': {1: 17683, 2: 7338, 3: 4265, 4: 2687, 5: 2042, 6: 1703, 7: 1641, 8: 986, 9: 987, 10: 1222, 11: 953, 12: 651, 13: 540, 14: 1364, 15: 667, 16: 363, 17: 1283, 18: 384, 19: 200, 20: 236, 21: 159, 22: 529, 23: 160, 24: 160, 25: 68, 26: 210, 27: 355, 28: 681, 29: 309, 30: 330, 31: 29, 32: 211, 33: 209, 34: 69, 35: 99, 36: 176, 37: 327, 38: 1854}, 'T300': {1: 3797, 2: 1556, 3: 870, 4: 581, 5: 428, 6: 344, 7: 322, 8: 216, 9: 213, 10: 324, 11: 191, 12: 172, 13: 126, 14: 226, 15: 134, 16: 110, 17: 247, 18: 65, 19: 40, 20: 60, 21: 23, 22: 119, 23: 37, 24: 44, 25: 14, 26: 36, 27: 79, 28: 87, 29: 28, 30: 34, 31: 2, 32: 46, 33: 27, 34: 11, 35: 21, 36: 21, 37: 39, 38: 114}, 'T111': {1: 16524, 2: 7793, 3: 4046, 4: 2778, 5: 1998, 6: 1652, 7: 1124, 8: 1022, 9: 968, 10: 1024, 11: 811, 12: 439, 13: 474, 14: 659, 15: 500, 16: 331, 17: 624, 18: 228, 19: 190, 20: 241, 21: 204, 22: 279, 23: 161, 24: 190, 25: 132, 26: 128, 27: 258, 28: 322, 29: 187, 30: 209, 31: 80, 32: 118, 33: 115, 34: 46, 35: 88, 36: 88, 37: 169, 38: 358}, 'T201': {1: 6301, 2: 2095, 3: 1064, 4: 781, 5: 479, 6: 551, 7: 269, 8: 273, 9: 250, 10: 275, 11: 154, 12: 94, 13: 145, 14: 120, 15: 64, 16: 39, 17: 39, 18: 48, 19: 41, 20: 29, 21: 42, 22: 64, 23: 27, 24: 36, 25: 13, 26: 39, 27: 39, 28: 107, 29: 51, 30: 33, 31: 5, 32: 20, 33: 19, 34: 1, 35: 9, 36: 6, 37: 5, 38: 63}, 'T021': {1: 11829, 2: 5441, 3: 2837, 4: 2416, 5: 1827, 6: 1647, 7: 1355, 8: 1447, 9: 1226, 10: 1626, 11: 1201, 12: 628, 13: 788, 14: 582, 15: 653, 16: 601, 17: 517, 18: 407, 19: 403, 20: 490, 21: 459, 22: 246, 23: 330, 24: 362, 25: 378, 26: 236, 27: 437, 28: 305, 29: 350, 30: 397, 31: 486, 32: 270, 33: 257, 34: 378, 35: 332, 36: 500, 37: 752, 38: 951}}"))
    arr.append(ast.literal_eval("{'T003': {1: 5262, 2: 4496, 3: 2248, 4: 1663, 5: 1866, 6: 1239, 7: 2846, 8: 622, 9: 865, 10: 1033, 11: 626, 12: 981, 13: 283, 14: 150, 15: 40, 16: 307, 17: 220, 18: 18, 19: 300, 20: 33, 21: 64, 22: 6, 23: 4, 24: 14, 25: 3, 26: 126, 27: 16, 28: 1174, 38: 65317}, 'T210': {1: 7792, 2: 2908, 3: 1531, 4: 978, 5: 752, 6: 520, 7: 460, 8: 403, 9: 304, 10: 391, 11: 172, 12: 150, 13: 175, 14: 98, 15: 123, 16: 77, 17: 165, 18: 82, 19: 98, 20: 73, 21: 95, 22: 64, 23: 74, 24: 64, 25: 81, 26: 90, 27: 97, 28: 113, 29: 41, 30: 35, 31: 34, 32: 38, 33: 39, 34: 12, 35: 45, 36: 26, 37: 27, 38: 35}, 'T012': {1: 16037, 2: 6880, 3: 4878, 4: 3857, 5: 2731, 6: 2141, 7: 2343, 8: 3158, 9: 1888, 10: 3018, 11: 1292, 12: 1345, 13: 1805, 14: 1254, 15: 946, 16: 1271, 17: 2310, 18: 1384, 19: 706, 20: 598, 21: 822, 22: 757, 23: 411, 24: 491, 25: 838, 26: 856, 27: 979, 28: 1081, 29: 488, 30: 890, 31: 1765, 32: 1380, 33: 1590, 34: 1149, 35: 1634, 36: 2511, 37: 2423, 38: 6664}, 'T120': {1: 10153, 2: 4309, 3: 2654, 4: 1933, 5: 1283, 6: 837, 7: 815, 8: 1325, 9: 675, 10: 588, 11: 468, 12: 273, 13: 269, 14: 266, 15: 242, 16: 157, 17: 158, 18: 107, 19: 93, 20: 65, 21: 61, 22: 118, 23: 67, 24: 61, 25: 72, 26: 39, 27: 88, 28: 55, 29: 21, 30: 46, 31: 23, 32: 31, 33: 25, 34: 7, 35: 29, 36: 25, 37: 12, 38: 35}, 'T030': {1: 5633, 2: 2145, 3: 1358, 4: 1119, 5: 814, 6: 592, 7: 465, 8: 800, 9: 558, 10: 787, 11: 403, 12: 359, 13: 375, 14: 277, 15: 217, 16: 218, 17: 395, 18: 257, 19: 113, 20: 109, 21: 113, 22: 90, 23: 69, 24: 91, 25: 94, 26: 95, 27: 78, 28: 94, 29: 70, 30: 73, 31: 118, 32: 101, 33: 78, 34: 61, 35: 62, 36: 114, 37: 74, 38: 60}, 'T102': {1: 17387, 2: 7010, 3: 3565, 4: 2725, 5: 1981, 6: 1355, 7: 1916, 8: 1286, 9: 1120, 10: 1028, 11: 921, 12: 447, 13: 419, 14: 379, 15: 388, 16: 168, 17: 341, 18: 210, 19: 125, 20: 167, 21: 155, 22: 482, 23: 157, 24: 139, 25: 122, 26: 110, 27: 317, 28: 681, 29: 161, 30: 420, 31: 57, 32: 171, 33: 99, 34: 37, 35: 138, 36: 119, 37: 105, 38: 1198}, 'T300': {1: 2617, 2: 959, 3: 484, 4: 327, 5: 262, 6: 127, 7: 170, 8: 163, 9: 145, 10: 113, 11: 77, 12: 31, 13: 48, 14: 43, 15: 45, 16: 17, 17: 35, 18: 7, 19: 13, 20: 10, 21: 14, 22: 32, 23: 10, 24: 18, 25: 15, 26: 3, 27: 47, 28: 35, 29: 12, 30: 43, 31: 7, 32: 20, 33: 8, 34: 3, 35: 13, 36: 5, 37: 9, 38: 21}, 'T111': {1: 15956, 2: 6546, 3: 3718, 4: 2222, 5: 1684, 6: 1327, 7: 1261, 8: 1449, 9: 893, 10: 730, 11: 604, 12: 400, 13: 338, 14: 382, 15: 370, 16: 172, 17: 207, 18: 128, 19: 146, 20: 151, 21: 98, 22: 184, 23: 133, 24: 91, 25: 99, 26: 72, 27: 192, 28: 158, 29: 70, 30: 172, 31: 79, 32: 60, 33: 20, 34: 13, 35: 51, 36: 42, 37: 28, 38: 108}, 'T201': {1: 5682, 2: 1912, 3: 946, 4: 561, 5: 397, 6: 262, 7: 309, 8: 343, 9: 270, 10: 351, 11: 164, 12: 162, 13: 144, 14: 69, 15: 97, 16: 54, 17: 96, 18: 45, 19: 80, 20: 55, 21: 100, 22: 79, 23: 78, 24: 99, 25: 53, 26: 46, 27: 79, 28: 165, 29: 50, 30: 48, 31: 16, 32: 45, 33: 18, 34: 5, 35: 36, 36: 27, 37: 10, 38: 58}, 'T021': {1: 10524, 2: 4589, 3: 3135, 4: 2312, 5: 1745, 6: 1313, 7: 1043, 8: 1972, 9: 1037, 10: 1790, 11: 908, 12: 678, 13: 761, 14: 574, 15: 541, 16: 568, 17: 786, 18: 503, 19: 377, 20: 269, 21: 347, 22: 347, 23: 251, 24: 265, 25: 380, 26: 327, 27: 351, 28: 411, 29: 184, 30: 269, 31: 515, 32: 351, 33: 360, 34: 238, 35: 389, 36: 443, 37: 356, 38: 531}}"))
    arr.append(ast.literal_eval("{'T120': {1: 8429, 2: 3507, 3: 1785, 4: 1643, 5: 1102, 6: 674, 7: 635, 8: 444, 9: 671, 10: 598, 11: 375, 12: 233, 13: 196, 14: 240, 15: 177, 16: 185, 17: 186, 18: 137, 19: 66, 20: 84, 21: 77, 22: 94, 23: 116, 24: 86, 25: 68, 26: 69, 27: 107, 28: 165, 29: 36, 30: 51, 31: 24, 32: 51, 33: 23, 34: 21, 35: 30, 36: 64, 37: 39, 38: 100}, 'T210': {1: 6818, 2: 2687, 3: 1362, 4: 1145, 5: 818, 6: 470, 7: 425, 8: 348, 9: 368, 10: 400, 11: 152, 12: 110, 13: 150, 14: 110, 15: 86, 16: 83, 17: 94, 18: 93, 19: 47, 20: 40, 21: 46, 22: 51, 23: 54, 24: 62, 25: 45, 26: 57, 27: 78, 28: 98, 29: 68, 30: 31, 31: 29, 32: 28, 33: 27, 34: 28, 35: 27, 36: 24, 37: 33, 38: 31}, 'T012': {1: 14801, 2: 7403, 3: 4046, 4: 3782, 5: 2722, 6: 1858, 7: 2219, 8: 1583, 9: 1981, 10: 2709, 11: 1679, 12: 1190, 13: 1384, 14: 1143, 15: 863, 16: 837, 17: 1238, 18: 1270, 19: 732, 20: 827, 21: 594, 22: 635, 23: 320, 24: 621, 25: 540, 26: 607, 27: 731, 28: 946, 29: 803, 30: 847, 31: 1518, 32: 928, 33: 1391, 34: 1015, 35: 1179, 36: 2460, 37: 2649, 38: 7465}, 'T003': {1: 5464, 2: 5048, 3: 1678, 4: 1356, 5: 1799, 6: 815, 7: 1967, 8: 605, 9: 776, 10: 814, 11: 417, 12: 188, 13: 119, 14: 114, 15: 75, 16: 178, 17: 151, 18: 32, 19: 34, 20: 76, 21: 170, 22: 9, 23: 8, 24: 22, 25: 7, 26: 55, 27: 32, 28: 1397, 38: 69810}, 'T030': {1: 4046, 2: 1731, 3: 904, 4: 936, 5: 658, 6: 531, 7: 494, 8: 372, 9: 500, 10: 684, 11: 292, 12: 205, 13: 244, 14: 168, 15: 131, 16: 132, 17: 171, 18: 192, 19: 74, 20: 93, 21: 52, 22: 70, 23: 42, 24: 51, 25: 45, 26: 67, 27: 55, 28: 59, 29: 73, 30: 57, 31: 73, 32: 52, 33: 59, 34: 31, 35: 39, 36: 72, 37: 67, 38: 52}, 'T111': {1: 14013, 2: 5544, 3: 2973, 4: 2188, 5: 1705, 6: 1018, 7: 914, 8: 699, 9: 947, 10: 866, 11: 485, 12: 352, 13: 285, 14: 291, 15: 273, 16: 212, 17: 306, 18: 299, 19: 132, 20: 177, 21: 111, 22: 131, 23: 185, 24: 157, 25: 128, 26: 120, 27: 247, 28: 388, 29: 141, 30: 64, 31: 58, 32: 125, 33: 71, 34: 43, 35: 79, 36: 45, 37: 39, 38: 170}, 'T102': {1: 17221, 2: 5813, 3: 3100, 4: 2718, 5: 1633, 6: 1246, 7: 1375, 8: 745, 9: 1118, 10: 1519, 11: 461, 12: 506, 13: 359, 14: 494, 15: 428, 16: 459, 17: 585, 18: 580, 19: 131, 20: 86, 21: 206, 22: 234, 23: 266, 24: 180, 25: 180, 26: 180, 27: 352, 28: 961, 29: 320, 30: 135, 31: 74, 32: 192, 33: 95, 34: 104, 35: 55, 36: 102, 37: 135, 38: 1560}, 'T300': {1: 2530, 2: 723, 3: 386, 4: 357, 5: 230, 6: 143, 7: 103, 8: 102, 9: 178, 10: 151, 11: 38, 12: 39, 13: 12, 14: 53, 15: 36, 16: 53, 17: 67, 18: 64, 19: 24, 20: 5, 21: 17, 22: 25, 23: 41, 24: 33, 25: 10, 26: 27, 27: 46, 28: 85, 29: 22, 30: 9, 32: 20, 33: 3, 34: 8, 35: 3, 36: 7, 37: 9, 38: 57}, 'T021': {1: 8762, 2: 4535, 3: 2353, 4: 2572, 5: 1707, 6: 1150, 7: 1170, 8: 807, 9: 1059, 10: 1595, 11: 921, 12: 557, 13: 648, 14: 543, 15: 555, 16: 461, 17: 512, 18: 434, 19: 331, 20: 287, 21: 214, 22: 315, 23: 208, 24: 242, 25: 220, 26: 264, 27: 227, 28: 350, 29: 236, 30: 337, 31: 457, 32: 287, 33: 346, 34: 277, 35: 266, 36: 604, 37: 549, 38: 892}, 'T201': {1: 4781, 2: 1277, 3: 738, 4: 595, 5: 442, 6: 283, 7: 303, 8: 178, 9: 246, 10: 356, 11: 68, 12: 76, 13: 113, 14: 75, 15: 48, 16: 35, 17: 53, 18: 109, 19: 38, 20: 22, 21: 52, 22: 74, 23: 37, 24: 64, 25: 55, 26: 31, 27: 65, 28: 144, 29: 58, 30: 11, 31: 11, 32: 18, 33: 19, 34: 13, 35: 14, 36: 23, 37: 26, 38: 50}}"))
    arr.append(ast.literal_eval("{'T120': {1: 9001, 2: 3579, 3: 2195, 4: 1445, 5: 1074, 6: 978, 7: 749, 8: 674, 9: 1699, 10: 1800, 11: 568, 12: 292, 13: 264, 14: 290, 15: 284, 16: 208, 17: 181, 18: 163, 19: 157, 20: 111, 21: 119, 22: 173, 23: 142, 24: 39, 25: 85, 26: 69, 27: 71, 28: 144, 29: 64, 30: 35, 31: 35, 32: 66, 33: 25, 34: 29, 35: 29, 36: 40, 37: 36, 38: 105}, 'T210': {1: 8844, 2: 3747, 3: 2073, 4: 1493, 5: 927, 6: 777, 7: 778, 8: 505, 9: 382, 10: 1030, 11: 333, 12: 308, 13: 249, 14: 240, 15: 271, 16: 239, 17: 201, 18: 143, 19: 169, 20: 146, 21: 176, 22: 180, 23: 126, 24: 119, 25: 94, 26: 96, 27: 149, 28: 291, 29: 59, 30: 32, 31: 21, 32: 24, 33: 32, 34: 12, 35: 9, 36: 17, 37: 21, 38: 120}, 'T012': {1: 14585, 2: 6413, 3: 4211, 4: 3096, 5: 2244, 6: 1795, 7: 2143, 8: 1430, 9: 3854, 10: 4986, 11: 2298, 12: 1070, 13: 1629, 14: 920, 15: 1028, 16: 1214, 17: 1206, 18: 840, 19: 631, 20: 1004, 21: 554, 22: 635, 23: 466, 24: 519, 25: 831, 26: 648, 27: 624, 28: 1027, 29: 596, 30: 552, 31: 1175, 32: 740, 33: 715, 34: 1444, 35: 1355, 36: 921, 37: 2276, 38: 6714}, 'T003': {1: 5018, 2: 1986, 3: 1799, 4: 2152, 5: 1321, 6: 868, 7: 1696, 8: 630, 9: 897, 10: 498, 11: 388, 12: 289, 13: 332, 14: 312, 15: 159, 16: 229, 17: 177, 18: 55, 19: 43, 20: 11, 21: 128, 22: 9, 23: 10, 24: 24, 25: 7, 26: 109, 27: 42, 28: 5021, 38: 57961}, 'T030': {1: 3695, 2: 1494, 3: 1098, 4: 720, 5: 549, 6: 387, 7: 425, 8: 279, 9: 986, 10: 1717, 11: 306, 12: 172, 13: 254, 14: 157, 15: 178, 16: 210, 17: 110, 18: 79, 19: 63, 20: 74, 21: 43, 22: 41, 23: 24, 24: 38, 25: 32, 26: 19, 27: 10, 28: 14, 29: 25, 30: 30, 31: 35, 32: 39, 33: 19, 34: 49, 35: 24, 36: 31, 37: 48, 38: 74}, 'T102': {1: 16112, 2: 6354, 3: 3268, 4: 2415, 5: 1402, 6: 1553, 7: 1985, 8: 1053, 9: 1166, 10: 2802, 11: 453, 12: 384, 13: 563, 14: 552, 15: 494, 16: 276, 17: 424, 18: 368, 19: 393, 20: 133, 21: 498, 22: 506, 23: 288, 24: 149, 25: 327, 26: 155, 27: 254, 28: 1957, 29: 688, 30: 110, 31: 78, 32: 95, 33: 83, 34: 46, 35: 18, 36: 36, 37: 50, 38: 1601}, 'T300': {1: 3904, 2: 1450, 3: 766, 4: 515, 5: 345, 6: 394, 7: 405, 8: 213, 9: 169, 10: 702, 11: 91, 12: 104, 13: 122, 14: 139, 15: 101, 16: 82, 17: 98, 18: 103, 19: 82, 20: 46, 21: 78, 22: 137, 23: 70, 24: 32, 25: 50, 26: 31, 27: 39, 28: 284, 29: 101, 30: 27, 31: 3, 32: 19, 33: 11, 34: 15, 35: 5, 36: 7, 37: 10, 38: 175}, 'T111': {1: 18864, 2: 7880, 3: 4706, 4: 2836, 5: 2179, 6: 2069, 7: 1523, 8: 1286, 9: 1509, 10: 2191, 11: 1029, 12: 681, 13: 769, 14: 584, 15: 736, 16: 411, 17: 484, 18: 407, 19: 346, 20: 347, 21: 301, 22: 467, 23: 297, 24: 118, 25: 298, 26: 151, 27: 278, 28: 580, 29: 349, 30: 56, 31: 100, 32: 83, 33: 35, 34: 55, 35: 21, 36: 57, 37: 60, 38: 252}, 'T201': {1: 8943, 2: 3581, 3: 1605, 4: 1521, 5: 752, 6: 439, 7: 793, 8: 461, 9: 424, 10: 1078, 11: 279, 12: 274, 13: 205, 14: 198, 15: 281, 16: 133, 17: 145, 18: 163, 19: 238, 20: 84, 21: 200, 22: 148, 23: 118, 24: 130, 25: 42, 26: 85, 27: 112, 28: 362, 29: 96, 30: 13, 32: 4, 33: 41, 37: 2, 38: 158}, 'T021': {1: 10769, 2: 4642, 3: 2896, 4: 2238, 5: 1437, 6: 1448, 7: 1090, 8: 930, 9: 2312, 10: 4866, 11: 1282, 12: 691, 13: 847, 14: 493, 15: 543, 16: 548, 17: 484, 18: 383, 19: 344, 20: 410, 21: 201, 22: 237, 23: 196, 24: 222, 25: 366, 26: 227, 27: 217, 28: 205, 29: 206, 30: 248, 31: 436, 32: 266, 33: 223, 34: 341, 35: 317, 36: 349, 37: 552, 38: 902}}"))
    arr.append(ast.literal_eval("{'T120': {1: 16593, 2: 6511, 3: 3985, 4: 2548, 5: 1730, 6: 1337, 7: 1120, 8: 923, 9: 855, 10: 772, 11: 579, 12: 493, 13: 462, 14: 405, 15: 437, 16: 317, 17: 292, 18: 182, 19: 138, 20: 198, 21: 145, 22: 194, 23: 177, 24: 98, 25: 116, 26: 159, 27: 155, 28: 117, 29: 59, 30: 110, 31: 58, 32: 70, 33: 48, 34: 44, 35: 47, 36: 46, 37: 58, 38: 106}, 'T210': {1: 13824, 2: 5543, 3: 2994, 4: 1935, 5: 1255, 6: 1068, 7: 916, 8: 688, 9: 610, 10: 526, 11: 397, 12: 402, 13: 348, 14: 280, 15: 205, 16: 259, 17: 278, 18: 119, 19: 113, 20: 149, 21: 141, 22: 120, 23: 125, 24: 169, 25: 104, 26: 114, 27: 121, 28: 189, 29: 80, 30: 91, 31: 50, 32: 42, 33: 65, 34: 44, 35: 31, 36: 41, 37: 56, 38: 151}, 'T012': {1: 19630, 2: 8706, 3: 5571, 4: 4031, 5: 3085, 6: 2507, 7: 2678, 8: 2502, 9: 2285, 10: 2215, 11: 2033, 12: 1268, 13: 1420, 14: 1278, 15: 910, 16: 1275, 17: 1451, 18: 764, 19: 690, 20: 898, 21: 849, 22: 707, 23: 534, 24: 733, 25: 895, 26: 891, 27: 925, 28: 640, 29: 825, 30: 1001, 31: 1677, 32: 1029, 33: 1236, 34: 1084, 35: 1728, 36: 1195, 37: 2108, 38: 8930}, 'T003': {1: 5495, 2: 2644, 3: 2818, 4: 1871, 5: 1913, 6: 1059, 7: 2209, 8: 973, 9: 1041, 10: 492, 11: 729, 12: 615, 13: 202, 14: 220, 15: 105, 16: 308, 17: 112, 18: 47, 19: 38, 20: 9, 21: 353, 22: 46, 23: 10, 24: 57, 25: 4, 26: 99, 27: 70, 28: 717, 38: 50977}, 'T030': {1: 8220, 2: 3362, 3: 1734, 4: 1299, 5: 932, 6: 836, 7: 793, 8: 792, 9: 708, 10: 678, 11: 645, 12: 416, 13: 425, 14: 348, 15: 301, 16: 340, 17: 340, 18: 190, 19: 161, 20: 177, 21: 155, 22: 110, 23: 103, 24: 137, 25: 118, 26: 100, 27: 88, 28: 73, 29: 81, 30: 92, 31: 116, 32: 74, 33: 90, 34: 72, 35: 76, 36: 43, 37: 91, 38: 116}, 'T111': {1: 21532, 2: 8880, 3: 5300, 4: 3355, 5: 2100, 6: 1979, 7: 1813, 8: 1360, 9: 1257, 10: 958, 11: 867, 12: 751, 13: 915, 14: 715, 15: 590, 16: 589, 17: 612, 18: 247, 19: 158, 20: 371, 21: 290, 22: 326, 23: 274, 24: 216, 25: 192, 26: 286, 27: 263, 28: 377, 29: 121, 30: 158, 31: 221, 32: 78, 33: 74, 34: 67, 35: 126, 36: 115, 37: 134, 38: 344}, 'T102': {1: 18665, 2: 7088, 3: 4501, 4: 2983, 5: 1312, 6: 1520, 7: 1987, 8: 1178, 9: 1408, 10: 1145, 11: 515, 12: 782, 13: 801, 14: 550, 15: 681, 16: 792, 17: 679, 18: 316, 19: 53, 20: 220, 21: 156, 22: 311, 23: 260, 24: 197, 25: 140, 26: 317, 27: 353, 28: 545, 29: 127, 30: 205, 31: 69, 32: 163, 33: 213, 34: 125, 35: 70, 36: 56, 37: 182, 38: 1722}, 'T300': {1: 5524, 2: 1889, 3: 1046, 4: 657, 5: 386, 6: 407, 7: 450, 8: 299, 9: 349, 10: 298, 11: 106, 12: 204, 13: 177, 14: 147, 15: 125, 16: 196, 17: 210, 18: 61, 19: 18, 20: 54, 21: 40, 22: 89, 23: 71, 24: 39, 25: 26, 26: 65, 27: 65, 28: 86, 29: 31, 30: 50, 31: 13, 32: 32, 33: 31, 34: 29, 35: 20, 36: 18, 37: 32, 38: 171}, 'T021': {1: 15133, 2: 6496, 3: 4249, 4: 3131, 5: 2316, 6: 1857, 7: 1559, 8: 1636, 9: 1537, 10: 1467, 11: 1238, 12: 863, 13: 906, 14: 747, 15: 609, 16: 588, 17: 662, 18: 364, 19: 571, 20: 495, 21: 427, 22: 408, 23: 385, 24: 415, 25: 458, 26: 446, 27: 477, 28: 385, 29: 401, 30: 554, 31: 592, 32: 408, 33: 424, 34: 363, 35: 516, 36: 461, 37: 764, 38: 1094}, 'T201': {1: 7964, 2: 2813, 3: 1829, 4: 955, 5: 465, 6: 625, 7: 591, 8: 424, 9: 370, 10: 321, 11: 291, 12: 302, 13: 208, 14: 142, 15: 88, 16: 136, 17: 157, 18: 40, 19: 25, 20: 61, 21: 197, 22: 98, 23: 106, 24: 130, 25: 81, 26: 91, 27: 108, 28: 142, 29: 76, 30: 46, 31: 20, 33: 51, 34: 13, 35: 4, 36: 5, 37: 1, 38: 193}}"))
    arr.append(ast.literal_eval("{'T120': {1: 11706, 2: 4787, 3: 2807, 4: 1786, 5: 1353, 6: 986, 7: 860, 8: 752, 9: 697, 10: 579, 11: 453, 12: 360, 13: 253, 14: 288, 15: 222, 16: 174, 17: 319, 18: 142, 19: 134, 20: 102, 21: 97, 22: 133, 23: 79, 24: 87, 25: 67, 26: 66, 27: 79, 28: 148, 29: 85, 30: 92, 31: 48, 32: 35, 33: 21, 34: 34, 35: 32, 36: 60, 37: 36, 38: 73}, 'T210': {1: 10112, 2: 4241, 3: 2249, 4: 1412, 5: 1016, 6: 714, 7: 667, 8: 454, 9: 447, 10: 329, 11: 260, 12: 251, 13: 150, 14: 155, 15: 119, 16: 109, 17: 79, 18: 71, 19: 87, 20: 78, 21: 95, 22: 61, 23: 59, 24: 36, 25: 32, 26: 87, 27: 52, 28: 66, 29: 31, 30: 35, 31: 39, 32: 26, 33: 28, 34: 19, 35: 23, 36: 22, 37: 30, 38: 82}, 'T012': {1: 19240, 2: 8485, 3: 5215, 4: 4157, 5: 3653, 6: 2139, 7: 2818, 8: 2595, 9: 2100, 10: 2188, 11: 2244, 12: 1359, 13: 1632, 14: 1298, 15: 1104, 16: 1301, 17: 1275, 18: 859, 19: 889, 20: 1205, 21: 1145, 22: 878, 23: 689, 24: 621, 25: 674, 26: 933, 27: 647, 28: 1205, 29: 661, 30: 1075, 31: 1696, 32: 797, 33: 1289, 34: 1059, 35: 1224, 36: 1811, 37: 2197, 38: 7568}, 'T003': {1: 5932, 2: 2795, 3: 2697, 4: 1635, 5: 2232, 6: 1093, 7: 2973, 8: 1086, 9: 597, 10: 1016, 11: 824, 12: 518, 13: 265, 14: 249, 15: 237, 16: 901, 17: 448, 18: 104, 19: 173, 20: 42, 21: 301, 23: 42, 24: 63, 25: 27, 26: 173, 27: 118, 28: 336, 38: 62745}, 'T030': {1: 5578, 2: 2337, 3: 1405, 4: 989, 5: 835, 6: 596, 7: 575, 8: 554, 9: 500, 10: 536, 11: 496, 12: 338, 13: 316, 14: 243, 15: 185, 16: 232, 17: 162, 18: 144, 19: 95, 20: 155, 21: 156, 22: 104, 23: 80, 24: 79, 25: 64, 26: 85, 27: 59, 28: 94, 29: 46, 30: 59, 31: 90, 32: 77, 33: 69, 34: 64, 35: 48, 36: 54, 37: 62, 38: 87}, 'T102': {1: 20668, 2: 7637, 3: 4334, 4: 2507, 5: 1910, 6: 1576, 7: 2056, 8: 1229, 9: 1664, 10: 1077, 11: 590, 12: 661, 13: 575, 14: 590, 15: 305, 16: 227, 17: 878, 18: 336, 19: 123, 20: 100, 21: 270, 22: 260, 23: 211, 24: 100, 25: 87, 26: 207, 27: 276, 28: 555, 29: 193, 30: 237, 31: 106, 32: 155, 33: 72, 34: 75, 35: 62, 36: 160, 37: 44, 38: 1642}, 'T300': {1: 3796, 2: 1345, 3: 645, 4: 436, 5: 385, 6: 248, 7: 313, 8: 213, 9: 279, 10: 219, 11: 82, 12: 93, 13: 91, 14: 102, 15: 53, 16: 51, 17: 134, 18: 42, 19: 16, 20: 8, 21: 34, 22: 52, 23: 30, 24: 20, 25: 10, 26: 26, 27: 38, 28: 84, 29: 22, 30: 30, 31: 6, 32: 12, 33: 8, 34: 9, 35: 5, 36: 14, 37: 3, 38: 87}, 'T111': {1: 17926, 2: 7293, 3: 4394, 4: 2622, 5: 2013, 6: 1466, 7: 1467, 8: 1089, 9: 1193, 10: 823, 11: 546, 12: 525, 13: 486, 14: 401, 15: 324, 16: 238, 17: 506, 18: 236, 19: 171, 20: 184, 21: 175, 22: 211, 23: 201, 24: 73, 25: 106, 26: 104, 27: 106, 28: 232, 29: 161, 30: 110, 31: 133, 32: 60, 33: 58, 34: 48, 35: 61, 36: 147, 37: 68, 38: 278}, 'T201': {1: 6614, 2: 2136, 3: 1244, 4: 767, 5: 458, 6: 352, 7: 429, 8: 214, 9: 379, 10: 224, 11: 118, 12: 164, 13: 69, 14: 50, 15: 53, 16: 39, 17: 26, 18: 17, 19: 45, 20: 21, 21: 99, 22: 14, 23: 39, 24: 7, 25: 18, 26: 76, 27: 49, 28: 62, 29: 19, 30: 13, 31: 66, 32: 6, 33: 3, 34: 4, 35: 12, 36: 16, 37: 3, 38: 133}, 'T021': {1: 12267, 2: 5557, 3: 3426, 4: 2682, 5: 2254, 6: 1404, 7: 1569, 8: 1372, 9: 1190, 10: 1177, 11: 1138, 12: 762, 13: 671, 14: 593, 15: 638, 16: 568, 17: 553, 18: 447, 19: 461, 20: 538, 21: 379, 22: 386, 23: 268, 24: 325, 25: 314, 26: 299, 27: 279, 28: 424, 29: 288, 30: 350, 31: 424, 32: 213, 33: 275, 34: 319, 35: 243, 36: 425, 37: 565, 38: 758}}"))

    runLengths = RunLength()

    total_map = {}
    for a in arr:
        for traid_type in a:
            if traid_type[-1:] == '0':
                for length in a[traid_type]:
                    runLengths.record(traid_type[:2], length, a[traid_type][length])

    print runLengths.run_lengths
    runLengths.print_averages()
    for length in range(1, 39):
        print "%d\t%d\t%d\t%d\t%d" % (length, runLengths.run_lengths['T0'][length],
                                      runLengths.run_lengths['T1'][length],
                                      runLengths.run_lengths['T2'][length],
                                      runLengths.run_lengths['T3'][length])

triad_runlengths()